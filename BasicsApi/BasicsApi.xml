<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BasicsApi</name>
    </assembly>
    <members>
        <member name="M:BasicsApi.conmon.LoggerHelper.Info(System.String,System.Exception)">
            <summary>
            普通日志
            </summary>
            <param name="message"></param>
            <param name="exception"></param>
        </member>
        <member name="M:BasicsApi.conmon.LoggerHelper.Warn(System.String,System.Exception)">
            <summary>
            告警日志
            </summary>
            <param name="message"></param>
            <param name="exception"></param>
        </member>
        <member name="M:BasicsApi.conmon.LoggerHelper.Error(System.String,System.Exception)">
            <summary>
            错误日志
            </summary>
            <param name="message"></param>
            <param name="exception"></param>
        </member>
        <member name="M:BasicsApi.conmon.RSAHelper.#ctor(BasicsApi.conmon.RSAType,System.Text.Encoding,System.String,System.String,System.String,System.String)">
            <summary>
            实例化RSAHelper
            </summary>
            <param name="rsaType">加密算法类型 RSA SHA1;RSA2 SHA256 密钥长度至少为2048</param>
            <param name="encoding">编码类型</param>
            <param name="privateKey">私钥</param>
            <param name="publicKey">公钥</param>
            <param name="appKey"></param>
            <param name="splitStr"></param>
        </member>
        <member name="M:BasicsApi.conmon.RSAHelper.Sign(System.String)">
            <summary>
            使用私钥签名
            </summary>
            <param name="data">原始数据</param>
            <returns></returns>
        </member>
        <member name="M:BasicsApi.conmon.RSAHelper.Verify(System.String,System.String)">
            <summary>
            使用公钥验证签名
            </summary>
            <param name="data">原始数据</param>
            <param name="sign">签名</param>
            <returns></returns>
        </member>
        <member name="M:BasicsApi.conmon.RSAHelper.Decrypt(System.String)">
            <summary>
            分段解密
            </summary>
            <param name="cipherText"></param>
            <returns></returns>
        </member>
        <member name="M:BasicsApi.conmon.RSAHelper.AppEncrypt(System.String)">
            <summary>
            分段加密
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:BasicsApi.conmon.RSAHelper.RSAEncrypt(System.String,System.String)">
            <summary>
            RAS加密
            </summary>
            <param name="xmlPublicKey">公钥</param>
            <param name="EncryptString">明文</param>
            <returns>密文</returns>
        </member>
        <member name="M:BasicsApi.conmon.RSAHelper.RSADecrypt(System.String,System.String)">
            <summary>
            RAS解密
            </summary>
            <param name="xmlPrivateKey">私钥</param>
            <param name="DecryptString">密文</param>
            <returns>明文</returns>
        </member>
        <member name="M:BasicsApi.conmon.RSAHelper.RSAKey">
            <summary>
            产生公钥和私钥对
            </summary>
            <returns>string[] 0:私钥;1:公钥</returns>
        </member>
        <member name="T:BasicsApi.conmon.RSAType">
            <summary>
            RSA算法类型
            </summary>
        </member>
        <member name="F:BasicsApi.conmon.RSAType.RSA">
            <summary>
            SHA1
            </summary>
        </member>
        <member name="F:BasicsApi.conmon.RSAType.RSA2">
            <summary>
            RSA2 密钥长度至少为2048
            SHA256
            </summary>
        </member>
        <member name="T:BasicsApi.conmon.WeixiaoAsyncAuthorizationFilterAttribute">
             <summary>
            
             </summary>
        </member>
        <member name="M:BasicsApi.conmon.WeixiaoAsyncAuthorizationFilterAttribute.OnAuthorizationAsync(Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext)">
             <summary>
            
             </summary>
             <param name="context"></param>
             <returns></returns>
        </member>
        <member name="T:BasicsApi.Controllers.AreaController">
            <summary>
            地区基础信息管理
            </summary>
        </member>
        <member name="M:BasicsApi.Controllers.AreaController.Area">
            <summary>
            获取地区列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:BasicsApi.Controllers.AreaController.SelectArea">
            <summary>
            获取地区下拉
            </summary>
            <returns></returns>
        </member>
        <member name="M:BasicsApi.Controllers.AreaController.GetAreaByIds(System.String)">
            <summary>
            通过地区表Id获取地区
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="T:BasicsApi.Controllers.UserController">
             <summary>
            
             </summary>
        </member>
        <member name="M:BasicsApi.Controllers.UserController.#ctor(BasicsApi.Models.WeixiaoSysContext,AutoMapper.IMapper,Microsoft.Extensions.Options.IOptions{BasicsApi.JwtSettings},Microsoft.Extensions.Options.IOptions{BasicsApi.RSASettings})">
             <summary>
            
             </summary>
             <param name="db"></param>
             <param name="mapper"></param>
             <param name="_jwtSettingsAccesser"></param>
             <param name="setting"></param>
             <returns></returns>
        </member>
        <member name="P:BasicsApi.Dto.ResponseDto.status">
            <summary>
            状态 0：成功， -1：失败
            </summary>
        </member>
        <member name="P:BasicsApi.Dto.ResponseDto.msg">
            <summary>
            返回消息
            </summary>
        </member>
        <member name="P:BasicsApi.Dto.ResponseDto.data">
            <summary>
            数据
            </summary>
        </member>
        <member name="T:BasicsApi.Models.FlowClipCfg">
            <summary>
            sharp为imges特有的属性，剪切图片，默认false不开启
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowClipCfg.Type">
            <summary>
            剪切的类型，和Shape传入的一样
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowClipCfg.X">
            <summary>
            裁剪图形的 x 坐标 类型为 'circle'、'rect'、'ellipse' 时生效
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowClipCfg.Y">
            <summary>
            裁剪图形的 Y 坐标 类型为 'circle'、'rect'、'ellipse' 时生效
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowClipCfg.Show">
            <summary>
            是否启用裁剪功能
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowClipCfg.R">
            <summary>
            剪裁圆形的半径
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowClipCfg.Width">
            <summary>
            剪裁矩形的宽度Number 剪裁 type 为 'rect' 时生效
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowClipCfg.Height">
            <summary>
            剪裁矩形的长度Number 剪裁 type 为 'rect' 时生效
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowClipCfg.Rx">
            <summary>
            剪裁椭圆的长轴半径Number剪裁 type 为 'ellipse' 时生效
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowClipCfg.Ry">
            <summary>
            剪裁椭圆的长轴半径Number 剪裁 type 为 'ellipse' 时生效
            </summary>
        </member>
        <member name="T:BasicsApi.Models.FlowCss">
            <summary>
            添加样式
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowCss.InsertCss">
            <summary>
            添加的样式内容 yarn add insertcss;
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowData.Gid">
            <summary>
            编号
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowData.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowData.Code">
            <summary>
            Code
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowEdge.Shape">
            <summary>
            类型 默认直线line 不支持控制点；.折线 polyline 支持多个控制点, 二阶贝塞尔曲线 quadratic 三阶贝塞尔曲线 cubic,圆弧线 arc,折线自环 loop,cubic-vertical：垂直方向的三阶贝塞尔曲线，不考虑用户从外部传入的控制点；cubic-horizontal；水平方向的三阶贝塞尔曲线，不考虑用户从外部传入的控制点；
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowEdge.Source">
            <summary>
            开始节点
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowEdge.Target">
            <summary>
            结束节点
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowEdgeLoopCfg.Position">
            <summary>
            position: 指定自环与节点的相对位置。默认为：top。支持的值有：top, top-right, right,bottom-right, bottom, bottom-left, left, top-left
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowEdgeLoopCfg.Dist">
            <summary>
            dist: 从节点 keyShape 的边缘到自环最顶端的位置，用于指定自环的曲度，默认为节点的高度。
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowEdgeLoopCfg.Clockwise">
            <summary>
            clockwise: 指定是否顺时针画环，默认为 true。
            </summary>
        </member>
        <member name="T:BasicsApi.Models.FlowFun">
            <summary>
            动态js方法
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowFun.FunName">
            <summary>
            方法名称
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowFun.FunParameter">
            <summary>
            传入参数
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowFun.FunBody">
            <summary>
            方法体
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowG6.FlowFronts">
            <summary>
            前置方法（创建菜单等）
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowG6.Ons">
            <summary>
            方法设置
            </summary>
        </member>
        <member name="T:BasicsApi.Models.FlowGraph">
            <summary>
            流程图基础配置
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowGraph.Container">
            <summary>
            图的 DOM 容器，可以传入该 DOM 的 id 或者直接传入容器的 HTML 节点对象
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowGraph.Width">
            <summary>
            长度，可以设置动态长度 window.innerWidth
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowGraph.Height">
            <summary>
            高度，可以设置动态长度 window.innerWidth
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowGraph.FitView">
            <summary>
            是否开启画布自适应
            </summary>
        </member>
        <member name="F:BasicsApi.Models.FlowGraph.fitViewPaddingJson">
            <summary>
            
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowGraph.FitViewPadding">
            <summary>
            Array | Number
            fitView 为 true 时生效。图适应画布时，指定四周的留白。可以是一个值,
            例如：fitViewPadding: 20也可以是一个数组，例如：fitViewPadding: [ 20, 40, 50, 20 ]
            当指定一个值时，四边的边距都相等，当指定数组时，数组内数值依次对应 上，右，下，左四边的边距。
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowGraph.GroupByTypes">
             <summary>
            默认true, 各种元素是否在一个分组内，决定节点和边的层级问题，默认情况下所有的节点在一个分组中，所有的边在一个分组中，当这个参数为 false 时，节点和边的层级根据生成的顺序确定。
             </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowGraph.GroupTypes">
            <summary>
            节点分组类型，支持 circle 和 rect
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowGraph.AutoPaint">
            <summary>
            默认true 当图中元素更新，或视口变换时，是否自动重绘。建议在批量操作节点时关闭，以提高性能，完成批量操作后再打开，参见后面的 setAutoPaint() 方法。
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowGraph.MinZoom">
            <summary>
            最小缩放
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowGraph.MaxZoom">
            <summary>
            最大缩放
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowGraph.DefaultNode">
            <summary>
            默认节点样式
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowGraph.DefaultEdge">
            <summary>
            默认线路样式
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowGraph.Layout">
            <summary>
            样式node可以不设置下x，y，按照规则生成（会让设置了x，y的也失效）,不实现的话则会重叠在0，0位置
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowGraph.NodeStateStyles">
            <summary>
            state 样式
            </summary>
        </member>
        <member name="T:BasicsApi.Models.FlowGroup">
            <summary>
            分组
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowGroup.Title">
            <summary>
            组文字描述
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowGroup.ParentId">
            <summary>
            组父Id
            </summary>
        </member>
        <member name="T:BasicsApi.Models.FlowGroupTitle">
            <summary>
            组文字描述
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowGroupTitle.Text">
            <summary>
            文字内容
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowGroupTitle.Stroke">
            <summary>
            字体边框颜色，同时也支持 fill、fontSize 等所有的文本样式属性
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowGroupTitle.Fill">
            <summary>
            设置用于填充绘画的颜色、渐变或模式
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowGroupTitle.fontSize">
            <summary>
            文字大小
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowGroupTitle.OffsetX">
            <summary>
            可选，默认为 0，表示 x 方向上的偏移量；
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowGroupTitle.OffsetY">
            <summary>
             可选，默认为 0，表示 Y 方向上的偏移量；
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowIcon.Show">
            <summary>
            是否显示icon
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowIcon.Width">
             <summary>
            icon的宽度
             </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowIcon.Height">
             <summary>
            icon的高度
             </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowIcon.Img">
            <summary>
            照片地址
            </summary>
        </member>
        <member name="T:BasicsApi.Models.FlowLabelCfgs">
            <summary>
            标签配置属性
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowLabelCfgs.Shape">
            <summary>
            类型
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowLabelCfgs.Position">
            <summary>
            标签的属性，标签在元素中的位置 文本相对于节点的位置，目前支持的位置有:  'center'，'top'，'left'，'right'，'bottom'。默认为 'center'。
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowLabelCfgs.Offset">
            <summary>
            文本的偏移，在 'top'，'left'，'right'，'bottom' 位置上的偏移量
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowLabelCfgs.Style">
            <summary>
            包裹标签样式属性的字段 style 与标签其他属性在数据结构上并行
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowLabelCfgs.AutoRotate">
            <summary>
            边上的标签文本根据边的方向旋转
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowLabelCfgs.LabelCfg">
            <summary>
            标签文本配置
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowLabelCfgs.LinkPoints">
            <summary>
            指定节点周围「上、下、左、右」四个方向上边的连入点LabelCfgs下的只有defaultNode下起作用
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowLabelCfgs.RefX">
            <summary>
            文本在 X 方向偏移量
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowLabelCfgs.RefY">
            <summary>
            文本在 y 方向偏移量
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowLayout.Type">
             <summary>
             必须使用小写，大小写敏感
             一般图：
            • Random Layout：随机布局；
            • Force Layout：经典力导向布局：
            力导向布局：一个布局网络中，粒子与粒子之间具有引力和斥力，从初始的随机无序的布局不断演变，逐渐趋于平衡稳定的布局方式称之为力导向布局。适用于描述事物间关系，比如人物关系、计算机网络关系等。
            • Circular Layout：环形布局；
            • Radial Layout：辐射状布局；
            • MDS Layout：高维数据降维算法布局；
            • Fruchterman Layout：Fruchterman 布局，一种力导布局；
            • Dagre Layout：层次布局。
            树图布局：
            • Dendrogram Layout：树状布局（叶子节点布局对齐到同一层）；
            • CompactBox Layout：紧凑树布局；
            • Mindmap Layout：脑图布局；
            • Intended Layout：缩进布局。
             </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowLayout.PreventOverlap">
            <summary>
            preventOverlap  防止节点重叠
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowLayout.LinkDistance">
            <summary>
            指定边距离
            </summary>
        </member>
        <member name="T:BasicsApi.Models.FlowLinkPoints">
            <summary>
            指定节点周围「上、下、左、右」四个方向上边的连入点
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowLinkPoints.Top">
            <summary>
            是否显示上部的连接点
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowLinkPoints.Bottom">
            <summary>
            是否显示底部的连接点
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowLinkPoints.Left">
            <summary>
            是否显示左部的连接点
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowLinkPoints.Right">
            <summary>
            是否显示右部的连接点
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowLinkPoints.Size">
            <summary>
            连接点大小
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowLinkPoints.Fill">
            <summary>
            连接点填充色
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowLinkPoints.Stroke">
            <summary>
            连接点的描边颜色
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowLinkPoints.LineWidth">
            <summary>
            连接点描边的宽度
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowNode.GroupId">
            <summary>
            组别
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowNode.X">
            <summary>
            x
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowNode.Y">
            <summary>
            y
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowNode.Label">
            <summary>
            文字描述
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowNode.Shape">
             <summary>
             circle 圆形：
            size 是单个数字，表示直径心位置对应节点的位置
            color 字段默认在描边上生效
            标签文本默认在节点中央
            rect 矩形：
            size 是数组，例如：[100, 50],设置单个为正方形
            color 字段默认在描边上生效
            标签文本默认在节点中央
            ellipse 椭圆
            size 是数组，表示椭圆的长和宽椭圆的圆心是节点的位置
            color 字段默认在描边上生效
            标签文本默认在节点中央
            diamond 菱形：
            size 是数组，表示菱形的长和宽
            菱形的中心位置是节点的位置
            color 字段默认在描边上生效
            标签文本默认在节点中央
            triangle 三角形：
            size 是数组，表示三角形的长和高
            三角形的中心位置是节点的位置
            color 字段默认在描边上生效
            标签文本默认在节点下方
            star 星形：
            size 是单个数字，表示星形的大小
            星星的中心位置是节点的位置
            color 字段默认在描边上生效
            标签文本默认在节点中央
            image图片：
            size 是数组，表示图片的长和宽
            图片的中心位置是节点位置
            img 图片的路径，也可以在 style 里面设置
            color 字段不生效
            标签文本默认在节点下方
            modelRect菱形：
            size 是数组，表示菱形的长和宽
            菱形的中心位置是节点的位置
            color 字段默认在描边上生效
            标签文本默认在节点中央
            若有 description 字段则显示在标签文本下方显示 description 内容
             </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowNode.Size">
            <summary>
            大小 circle设置半径，矩形椭圆设置长宽[20,10]
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowNode.AnchorPoints">
            <summary>
            anchorPoints 该节点可选的连接点集合
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowNode.Description">
            <summary>
            附文本,shape设置modelRect生效
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowNode.LabelCfg">
            <summary>
            属性
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowNode.Style">
            <summary>
            样式
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowNode.StateStyles">
             <summary>
            各状态下的样式Object只对keyShape起作用
             </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowNode.LinkPoints">
            <summary>
            指定节点周围「上、下、左、右」四个方向上边的连入点
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowNode.Img">
            <summary>
            图片路径，shape设置为image时生效
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowNode.ClipCfg">
            <summary>
            sharp为imges特有的属性，剪切图片，默认false不开启
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowNode.IconId">
            <summary>
            图标（圆，椭圆，菱形，三角形,五角星,方形卡片）
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowNode.Direction">
            <summary>
            三角形的方向String 可取值：up、down、left、right，默认为up。
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowNode.InnerR">
            <summary>
            五角星内环大小
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowRegisterBehavior.Type">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowRegisterBehavior.Behavior">
            <summary>
            详细内容
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowStyle.Fill">
            <summary>
            元素的填充色
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowStyle.Stroke">
            <summary>
            元素的描边色
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowStyle.LineWidth">
            <summary>
            描边宽度
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowStyle.ShadowColor">
            <summary>
            阴影颜色
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowStyle.ShadowBlur">
            <summary>
            阴影范围
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowStyle.ShadowOffsetX">
            <summary>
            阴影 x 方向偏移量
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowStyle.ShadowOffsetY">
            <summary>
            阴影 y 方向偏移量
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowStyle.Opacity">
            <summary>
            透明度
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowStyle.Radius">
            <summary>
            Shape为rect时候圆角半径 线拐弯处的圆角弧度
            </summary>
        </member>
        <member name="P:BasicsApi.Models.FlowStyle.Offset">
            <summary>
            拐弯处距离节点最小距离	Number     默认为 5，polyline 特有
            </summary>
        </member>
        <member name="P:BasicsApi.Models.ModeOption.Type">
            <summary>
            拖拽画布type: 'drag-canvas'
            缩放画布type: 'zoom-canvas'
            拖拽节点type: 'drag-node'
            点击选中节点，再次点击节点或点击 Canvas 取消选中状态type: 'click-select'
            </summary>
        </member>
        <member name="T:BasicsApi.Models.DragCanvas">
            <summary>
            拖拽画布
            </summary>
        </member>
        <member name="P:BasicsApi.Models.DragCanvas.Type">
            <summary>
            drag-canvas
            </summary>
        </member>
        <member name="P:BasicsApi.Models.DragCanvas.Direction">
            <summary>
            direction: 允许拖拽方向，支持'x'， 'y'，'both'，默认方向为 'both'。
            </summary>
        </member>
        <member name="T:BasicsApi.Models.ZoomCanvas">
            <summary>
            缩放画布
            </summary>
        </member>
        <member name="P:BasicsApi.Models.ZoomCanvas.Type">
            <summary>
            zoom-canvas
            </summary>
        </member>
        <member name="P:BasicsApi.Models.ZoomCanvas.Sensitivity">
            <summary>
            • sensitivity: 缩放灵敏度，支持 1-10 的数值，默认灵敏度为 5。 提示：若要限定缩放尺寸，请在 graph 上设置 minZoom 和 maxZoom。
            </summary>
        </member>
        <member name="T:BasicsApi.Models.DragNode">
            <summary>
            拖拽节点
            </summary>
        </member>
        <member name="P:BasicsApi.Models.DragNode.Type">
            <summary>
            drag-node 拖拽节点
            </summary>
        </member>
        <member name="P:BasicsApi.Models.DragNode.DelegateStyle">
            <summary>
            delegateStyle: 节点拖拽时的绘图属性，默认为 { strokeOpacity: 0.6, fillOpacity: 0.6 }；
            </summary>
        </member>
        <member name="P:BasicsApi.Models.DragNode.UpdateEdge">
            <summary>
            updateEdge: 是否在拖拽节点时更新所有与之相连的边，默认为 true 。
            </summary>
        </member>
        <member name="P:BasicsApi.Models.DragNode.EnableDelegate">
            <summary>
            • 3.1.2 enableDelegate：拖动节点过程中是否启用 delegate，即在拖动过程中是否使用方框代替元素的直接移动，效果区别见下面两个动图。默认值为 false。
            </summary>
        </member>
        <member name="T:BasicsApi.Models.DelegateStyle">
            <summary>
             delegateStyle: 节点拖拽时的绘图属性，默认为 { strokeOpacity: 0.6, fillOpacity: 0.6 }；
            </summary>
        </member>
        <member name="T:BasicsApi.Models.ClickSelect">
            <summary>
            点击选中节点，再次点击节点或点击 Canvas 取消选中状态
            </summary>
        </member>
        <member name="P:BasicsApi.Models.ClickSelect.Type">
            <summary>
            click-select
            </summary>
        </member>
        <member name="P:BasicsApi.Models.ClickSelect.Multiple">
            <summary>
            是否允许多选，默认为 true，当设置为 false，表示不允许多选，此时 trigger 参数无效。
            </summary>
        </member>
        <member name="P:BasicsApi.Models.ClickSelect.Trigger">
            <summary>
            3.1.2 trigger: 指定按住哪个键进行多选，默认为 shift，按住 Shift 键多选，用户可配置 shift、ctrl、alt；
            </summary>
        </member>
        <member name="T:BasicsApi.Models.Tooltip">
            <summary>
            节点文本提示
            </summary>
        </member>
        <member name="P:BasicsApi.Models.Tooltip.Type">
            <summary>
            tooltip
            </summary>
        </member>
        <member name="P:BasicsApi.Models.Tooltip.FormatText">
            <summary>
            tooltip 提示开启时
            </summary>
        </member>
        <member name="T:BasicsApi.Models.EdgeTooltip">
            <summary>
            边文本提示 使用方式基本与 tooltip 相同，但是移到边时触发。主要是为了将两个交互区分开，以满足用户边与节点的提示样式或 HTML 结构不同，以及不需要在事件中去区分是节点事件还是边事件等。
            </summary>
        </member>
        <member name="P:BasicsApi.Models.EdgeTooltip.Type">
            <summary>
            tooltip
            </summary>
        </member>
        <member name="P:BasicsApi.Models.EdgeTooltip.FormatText">
            <summary>
            tooltip 提示开启时
            </summary>
        </member>
        <member name="T:BasicsApi.Models.ActivateRelations">
            <summary>
            activate-relations 当鼠标移到某节点时，突出显示该节点以及与其直接关联的节点和连线；
            </summary>
        </member>
        <member name="P:BasicsApi.Models.ActivateRelations.Type">
            <summary>
             activate-relations
            </summary>
        </member>
        <member name="P:BasicsApi.Models.ActivateRelations.Trigger">
            <summary>
            trigger: 'mouseenter', 可以是 mousenter , 鼠标移入时触发；也可以是 click ，鼠标点击时触发
            </summary>
        </member>
        <member name="P:BasicsApi.Models.ActivateRelations.ActiveState">
            <summary>
            activeState: 'active', 活跃节点状态；当行为被触发，需要被突出显示的节点和边都会附带此状态，默认值为 active；可以与 graph 实例的 nodeStyle 和 edgeStyle 结合实现丰富的视觉效果。
            </summary>
        </member>
        <member name="P:BasicsApi.Models.ActivateRelations.InactiveState">
            <summary>
            inactiveState: 'inactive'，非活跃节点状态，不需要被突出显示的节点和边都会附带此状态，默认值为 inactive；可以与 graph 实例的 nodeStyle 和 edgeStyle 结合实现丰富的视觉效果；
            </summary>
        </member>
        <member name="P:BasicsApi.Models.ActivateRelations.ResetSelected">
            <summary>
            3.1.2 resetSelected：高亮相连节点时是否重置已经选中的节点，默认为false，即选中的节点状态不会被 activate-relations 覆盖。
            </summary>
        </member>
        <member name="T:BasicsApi.Models.BrushSelect">
            <summary>
            brush-select 拖动框选节点
            </summary>
        </member>
        <member name="P:BasicsApi.Models.BrushSelect.Type">
            <summary>
            brush-select
            </summary>
        </member>
        <member name="P:BasicsApi.Models.BrushSelect.BrushStyle">
            <summary>
            brushStyle：拖动框选框的样式；
            </summary>
        </member>
        <member name="P:BasicsApi.Models.BrushSelect.OnSelect">
            <summary>
            onSelect(nodes)：选中节点时的回调，参数 nodes 表示选中的节点；
            </summary>
        </member>
        <member name="P:BasicsApi.Models.BrushSelect.OnDeselect">
            <summary>
            onDeselect(nodes)：取消选中节点时的回调，参数 nodes 表示取消选中的节点；
            </summary>
        </member>
        <member name="P:BasicsApi.Models.BrushSelect.BrushStyles">
            <summary>
             brushStyle：框选时样式的配置项，包括 fill、fillOpacity、stroke 和 lineWidth 四个属性；
            </summary>
        </member>
        <member name="P:BasicsApi.Models.BrushSelect.SelectedState">
            <summary>
            selectedState：选中的状态，默认值为 'selected'；
            </summary>
        </member>
        <member name="P:BasicsApi.Models.BrushSelect.IncludeEdges">
            <summary>
             includeEdges：框选过程中是否选中边，默认为 true，用户配置为 false 时，则不选中边；
            </summary>
        </member>
        <member name="P:BasicsApi.Models.BrushSelect.Trigger">
            <summary>
             3.1.2 trigger：触发框选的动作，默认为 'shift'，即用户按住 Shift 键拖动就可以进行框选操作，可配置的的选项为: 'shift'、'ctrl' / 'control'、'alt' 和 'drag' ，不区分大小写
             'shift'：按住 Shift 键进行拖动框选；
            • 'ctrl' / 'control'：按住 Ctrl 键进行拖动框选；
            • 'alt'：按住 Alt 键进行拖动框选；
            • 风险 'drag'：不需要按任何键，进行拖动框选，如果同时配置了 drag-canvas，则会与该选项冲突。
            </summary>
        </member>
        <member name="T:BasicsApi.Models.CollapseExpand">
            <summary>
            collapse-expand 只适用于树图，展开或收起节点
            </summary>
        </member>
        <member name="P:BasicsApi.Models.CollapseExpand.Type">
            <summary>
            collapse-expand
            </summary>
        </member>
        <member name="P:BasicsApi.Models.CollapseExpand.Trigger">
            <summary>
            trigger：收起和展开树图的方式，支持click和dblclick两种方式，默认为click；
            </summary>
        </member>
        <member name="P:BasicsApi.Models.CollapseExpand.OnChange">
            <summary>
            onChange：收起或展开的回调函数，警告 3.1.2 版本中将移除。
            </summary>
        </member>
        <member name="T:BasicsApi.Models.CollapseExpandGroup">
            <summary>
            collapse-expand-group 收起和展开群组
            </summary>
        </member>
        <member name="P:BasicsApi.Models.CollapseExpandGroup.Type">
            <summary>
            collapse-expand-group
            </summary>
        </member>
        <member name="P:BasicsApi.Models.CollapseExpandGroup.Trigger">
            <summary>
            3.1.2 trigger：收起和展开节点分组的方式，支持click和dblclick两种方式，默认为dblclick
            </summary>
        </member>
        <member name="T:BasicsApi.Models.DragGroup">
            <summary>
            drag-group 拖动节点分组
            </summary>
        </member>
        <member name="P:BasicsApi.Models.DragGroup.Type">
            <summary>
            drag-group
            </summary>
        </member>
        <member name="P:BasicsApi.Models.DragGroup.DelegateStyle">
             <summary>
            delegateStyle：拖动节点分组时 delegate 的样式。
             </summary>
        </member>
        <member name="T:BasicsApi.Models.DragNodeWithGroup">
            <summary>
            drag-node-with-group 拖动节点分组中的节点
            </summary>
        </member>
        <member name="P:BasicsApi.Models.DragNodeWithGroup.Type">
            <summary>
            drag-node-with-group
            </summary>
        </member>
        <member name="P:BasicsApi.Models.DragNodeWithGroup.DelegateStyle">
             <summary>
            delegateStyle：拖动节点分组时 delegate 的样式。
             </summary>
        </member>
        <member name="P:BasicsApi.Models.DragNodeWithGroup.MaxMultiple">
            <summary>
            最大倍数
            </summary>
        </member>
        <member name="P:BasicsApi.Models.DragNodeWithGroup.MinMultiple">
            <summary>
            最小倍数
            </summary>
        </member>
        <member name="T:BasicsApi.Models.OtherModeOption">
            <summary>
            Other
            </summary>
        </member>
        <member name="P:BasicsApi.Models.OtherModeOption.Type">
            <summary>
            
            </summary>
        </member>
        <member name="M:BasicsApi.Service.AreaService.Areas(System.Nullable{System.Int32})">
            <summary>
            根据id获取它和子树
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:BasicsApi.Service.CompanyService.CompanyList(BasicsApi.Dto.CompanyDto)">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:BasicsApi.Service.CompanyService.CompanyById(System.Int32)">
             <summary>
            
             </summary>
             <param name="id"></param>
             <returns></returns>
        </member>
        <member name="M:BasicsApi.Service.CompanyService.Companys(System.Nullable{System.Int32})">
            <summary>
            根据id获取它和子树
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:BasicsApi.Service.MenuService.MenuList(BasicsApi.Dto.MenuDto)">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:BasicsApi.Service.MenuService.MenuById(System.Int32)">
             <summary>
            
             </summary>
             <param name="id"></param>
             <returns></returns>
        </member>
        <member name="M:BasicsApi.Service.MenuService.Menus(System.Nullable{System.Int32})">
            <summary>
            根据id获取它和子树
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
    </members>
</doc>
